=======================================================================

 REQUISITI: UNA CONNESSIONE AD INTERNET

=======================================================================

 
 UN APPROCCIO COMUNE E SPESSO COMPLICATO, E' QUELLO DI LASCIARE
 LA GESTIONE DEL LOGIN ALLA WEB APP: QUESTO RICHIEDE PIU' SKILL
 IN AMBITO DI PROGRAMMAZIONE O DI AUTENTICAZIONE.
 UNO DEI VANTAGGI E' QUELLO DI CREARE UTENTI DEFINITI CON CRITERI E
 PERMESSI PERSONALIZZATI DALLA PROPRIA WEB APP.
 APPROCCI COMUNI USATI SONO SESSIONI E COOKIE PER RICORDARE IL LOGIN.


 TIPOLOGIE DI AUTENTICAZIONI COMUNI SONO:


	============================================================
	- AUTENTICAZIONE HANDMADE:	IL PROGRAMMATORE SCEGLIERA'
					COME AUTENTICARE

	- AUTENTICAZIONE FRAMEWORK:	TRAMITE CODICE GIA' SCRITTO
					E' POSSIBILE USARE LOGIN
					SCRITTO DAL FRAMEWORK

	- AUTENTICAZIONE ESTERNA:	FACEBOOK, GOOGLE, GMAIL ETC.
	============================================================
 

 NEL PRIMO CASO DELLA LISTA E' PIU' PROBABILE POTER EFFETTUARE ATTACCHI
 CON SUCCESSO, COME AD ESEMPIO "SQL INJECTION".

 
 NEL SECONDO CASO LE VULNERABILITA' DIPENDONO DAI FRAMEWORK USATI
 (LARAVEL, CAKEPHP, CODEIGNITE ETC.) E DALLA LORO VERSIONE.


 NEL TERZO CASO L'AUTENTICAZIONE E' DI TIPO PRIOPRIETARIO:
 LA WEB APP NON HA CONOSCENZA DI COME FUNZIONI IL SISTEMA ESTERNO.
 DI CONSEGUENZA PUO' ESSERE MOLTO COMPLICATO SCOVARE VULNERAILITA'.


=======================================================================