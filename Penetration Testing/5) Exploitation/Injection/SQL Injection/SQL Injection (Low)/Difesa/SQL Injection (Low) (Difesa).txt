=======================================================================

 REQUISITI: UNA CONNESSIONE AD INTERNET

=======================================================================


 LA SOLUZIONE PIU' COMUNE E' QUELLA DI EFFETTUARE IL WHITELISTING
 SU COSA POSSA ESSERE DATO IN INPUT ALLA QUERY (EX: UN INTERO)

 ALTRA PRASSI UTILE E' DI USARE PER PHP "PDO": UN ESTENSIONE
 CHE INTEGRA I NUOVI STANDARD DI SICUREZZA

 

 NEL CASO L'INPUT NON SIA PREVEDIBILE:


	===========================================================
	- EFFETTUA UN ESCAPE DI CARATTERI: PDO::FUNZIONI
	PERMETTONO DI PREPARARE MEGLIO LA QUERY

	EX:

	....

	    // Get input
	    $id = $_GET[ 'id' ];
	
	    // Was a number entered?
	    if(is_numeric( $id )) {
	        // Check the database
	        $data = $db->prepare( 'SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;' );
	        $data->bindParam( ':id', $id, PDO::PARAM_INT );
	        $data->execute();
	        $row = $data->fetch();
	
	        // Make sure only 1 result is returned
	        if( $data->rowCount() == 1 ) {
        	    // Get values
	            $first = $row[ 'first_name' ];
	            $last  = $row[ 'last_name' ];
	....



	- USO DI BLACKLISTING, PER NEGARE I CARATTERI

	- USA I PREPARED STATEMENT: PER EFFICIENZA E SICUREZZA
	===========================================================


 RISORSE:


	==========================================
	https://www.php.net/manual/en/book.pdo.php
	https://www.w3schools.com/
	php/php_mysql_prepared_statements.asp
	==========================================


=======================================================================